---
// src/components/Map.astro
interface Props {
    lat?: number;
    lng?: number;
    zoom?: number;
    markerTitle?: string;
}

const {
    lat = 44.545380, // Horseshoe Valley coordinates
    lng = -79.677254,
    zoom = 15,
    markerTitle = "SMART Performance Centre",
} = Astro.props;
---

<div class="map-container">
    <div id="map" class="h-[500px] w-full rounded-lg shadow-lg"></div>
</div>

<!-- Leaflet CSS -->
<link
    rel="stylesheet"
    href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""
/>

<!-- Leaflet JavaScript -->
<script
    src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""
></script>

<script define:vars={{ lat, lng, zoom, markerTitle }}>
    // Initialize map when document is loaded
    document.addEventListener("DOMContentLoaded", () => {
        // Create map instance
        const map = L.map("map").setView([lat, lng], zoom);

        // Add OpenStreetMap tiles
        L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
            maxZoom: 25,
            attribution: "Â© OpenStreetMap contributors",
        }).addTo(map);

        // Custom marker icon
        const customIcon = L.divIcon({
            className: "custom-div-icon",
            html: `
        <div class="marker-pin text-light">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#EE0405" class="w-6 h-6">
            <path fill-rule="evenodd" d="M11.54 22.351l.07.04.028.016a.76.76 0 00.723 0l.028-.015.071-.041a16.975 16.975 0 001.144-.742 19.58 19.58 0 002.683-2.282c1.944-1.99 3.963-4.98 3.963-8.827a8.25 8.25 0 00-16.5 0c0 3.846 2.02 6.837 3.963 8.827a19.58 19.58 0 002.682 2.282 16.975 16.975 0 001.145.742zM12 13.5a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd" />
          </svg>
        </div>
      `,
            iconSize: [32, 42],
            iconAnchor: [15, 42],
        });

        // Add marker
        const marker = L.marker([lat, lng], { icon: customIcon }).addTo(map);
        marker.bindPopup(markerTitle).openPopup();
    });
</script>

<style>
    /* Custom marker styles */
    .custom-div-icon {
        background: none;
        border: none;
    }

    .marker-pin {
        width: 32px;
        height: 42px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50% 50% 50% 0;
        transform: rotate(-45deg);
        position: relative;
    }

    .marker-pin svg {
        transform: rotate(45deg);
    }

    /* Optional: Add styles for map container hover state */
    #map {
        @apply transition-shadow duration-300;
    }

    #map:hover {
        @apply shadow-xl;
    }
</style>
