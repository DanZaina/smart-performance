---
// src/components/SlidingTextSection.astro
---

<section class="relative py-12 md:py-16 lg:py-24">
  {/* Background Lines */}
  <div class="absolute inset-0">
    <div class="container xl:max-w-[1280px] h-full mx-auto px-4 relative">
      <div class="absolute inset-0 flex justify-between pointer-events-none">
        <div class="w-px h-full bg-dark/5"></div>
        <div class="w-px h-full bg-dark/5"></div>
        <div class="w-px h-full bg-dark/5"></div>
        <div class="w-px h-full bg-dark/5"></div>
        <div class="w-px h-full bg-dark/5"></div>
      </div>
    </div>
  </div>

  {/* Content Container */}
  <div class="container xl:max-w-[1280px] mx-auto px-4 relative">
    <div class="grid md:grid-cols-2 items-center gap-4">
      {/* Column 1: Sliding Text */}
      <div class="p-8 md:p-16">
        <div class="flex flex-col space-y-8 md:space-y-12" id="sliding-text">
          <h3 class="text-4xl font-bold leading-tight font-barlow tracking-wide transition-all duration-500" data-text>Exclusive BMW Motorcycles</h3>
          <h3 class="text-4xl font-bold leading-tight font-barlow tracking-wide transition-all duration-500" data-text>Scenic Training Grounds</h3>
          <h3 class="text-4xl font-bold leading-tight font-barlow tracking-wide transition-all duration-500" data-text>Nearby Accommodations</h3>
          <h3 class="text-4xl font-bold leading-tight font-barlow tracking-wide transition-all duration-500" data-text>Expert Instructors</h3>
          <h3 class="text-4xl font-bold leading-tight font-barlow tracking-wide transition-all duration-500" data-text>Comprehensive Training</h3>
        </div>
      </div>

      {/* Column 2: Double Image Row */}
      <div class="hidden md:block relative h-full">
        <div class="absolute right-0 top-1/2 -translate-y-1/2 flex gap-3 translate-x-8">
          {/* Image 1 */}
          <div class="relative overflow-hidden rounded-lg shadow-lg w-[300px]">
            <img 
              src="https://placehold.co/300x400"
              alt="Placeholder image 1"
              class="w-full h-[400px] object-cover transition-transform duration-700 hover:scale-105"
            />
          </div>
          
          {/* Image 2 */}
          <div class="relative overflow-hidden rounded-lg shadow-lg w-[300px]">
            <img 
              src="https://placehold.co/300x400"
              alt="Placeholder image 2"
              class="w-full h-[400px] object-cover transition-transform duration-700 hover:scale-105"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  const textElements = document.querySelectorAll('[data-text]');
  let currentIndex = 0;

  // Function for clean fade transition with subtle slide
  const updateText = (index, active) => {
    const element = textElements[index];
    if (active) {
      element.style.color = '#4599FE';
      element.style.opacity = '1';
      element.style.transform = 'translateY(0)';
      element.style.textShadow = '0 1px 2px rgba(69, 153, 254, 0.1)';
    } else {
      element.style.color = '#E9E9E9';
      element.style.opacity = '0.4';
      element.style.transform = 'translateY(0)';
      element.style.textShadow = 'none';
    }
  };

  // Initialize all texts
  textElements.forEach((el, index) => {
    el.style.opacity = index === 0 ? '1' : '0.4';
    el.style.color = index === 0 ? '#4599FE' : '#E9E9E9';
    el.style.transform = 'translateY(0)';

    // Add subtle hover effect
    el.addEventListener('mouseenter', () => {
      if (index !== currentIndex) {
        el.style.opacity = '0.7';
      }
    });

    el.addEventListener('mouseleave', () => {
      if (index !== currentIndex) {
        el.style.opacity = '0.4';
      }
    });
  });

  // Animation loop with clean transitions
  setInterval(() => {
    updateText(currentIndex, false);
    currentIndex = (currentIndex + 1) % textElements.length;
    updateText(currentIndex, true);
  }, 2000);

  // Optional: Add a subtle pulse animation to active text
  const pulseAnimation = () => {
    const activeText = textElements[currentIndex];
    activeText.style.transform = 'translateY(-2px)';
    
    setTimeout(() => {
      activeText.style.transform = 'translateY(0)';
    }, 200);
  };

  // Trigger pulse every 4 seconds
  setInterval(pulseAnimation, 4000);
</script>